{
  config,
  lib,
  pkgs,
  ...
}:
with lib; let
  cfg = config.programs.vifm;
  vifmimg = pkgs.writeShellScriptBin "vifmimg" (''
      #!/bin/sh
      mkdir -p "$HOME/.cache/vifm"
      export PCACHE="$HOME/.cache/vifm/thumbnail.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$PWD/$6")" | sha256sum | awk '{print $1}'))"
    ''
    + {
      kitty = ''
        pclear() {
          ${pkgs.kitty}/bin/kitten icat --clear --silent
        }
        image() {
          ${pkgs.kitty}/bin/kitten icat --silent --transfer-mode=file --scale-up "--place=$4x$5@$2x$3" $6
        }
      '';
    }
    ."${cfg.vifmimg.terminal}"
    + ''
      main() {
        case "$1" in
          "clear")
            pclear "$@"
            ;;
          "draw")
            FILE="$PWD/$6"
            image "$1" "$2" "$3" "$4" "$5" "$FILE"
            ;;
          "video")
            [ ! -f "$PCACHE" ] && \
              ${pkgs.ffmpegthumbnailer}/bin/ffmpegthumbnailer -i "$6" -o "''${PCACHE}.jpg" -s 0 -q 5
            image "$1" "$2" "$3" "$4" "$5" "''${PCACHE}.jpg"
            ;;
          "pdf")
            [ ! -f "''${PCACHE}.jpg" ] && \
              ${pkgs.poppler_utils}/bin/pdftoppm -jpeg -f 1 -singlefile "$6" "$PCACHE"
            image "$1" "$2" "$3" "$4" "$5" "''${PCACHE}.jpg"
            ;;
          "audio")
            [ ! -f "''${PCACHE}.jpg" ] && \
              ${pkgs.ffmpeg}/bin/ffmpeg -i "$6" "''${PCACHE}.jpg" -y >/dev/null
            image "$1" "$2" "$3" "$4" "$5" "''${PCACHE}.jpg"
            ;;
          "font")
            [ ! -f "''${PCACHE}.jpg" ] && \
              ${pkgs.fontpreview}/bin/fontpreview -i "$6" -o "''${PCACHE}.jpg"
            image "$1" "$2" "$3" "$4" "$5" "''${PCACHE}.jpg"
            ;;
          *)
        esac
      }
      main "$@"
    '');
in {
  disabledModules = [
    "programs/vifm.nix"
  ];
  options.programs.vifm = {
    enable = mkEnableOption "Vifm - Vim-like file manager";

    package = mkOption {
      type = types.package;
      default = pkgs.vifm;
      defaultText = literalExpression "pkgs.vim-full";
      description = ''
        Vifm package to install.
      '';
    };

    vifmimg = {
      enable = mkEnableOption "Image previews for vifm";
      terminal = mkOption {
        type = types.enum ["kitty"];
        default = "kitty";
        description = "What terminal should vifm be configured for";
      };
    };

    config = mkOption {
      type = with types; attrsOf (listOf str);
      default = {};
      description = ''
        Configuration written to
        {file}`$XDG_CONFIG_HOME/vifm/vifmrc`. See
        <https://wiki.vifm.info/index.php/Configuration_model>
        for the documentation.
      '';
    };

    extraConfig = mkOption {
      default = "";
      type = types.lines;
      description = "Additional configuration to add.";
    };
  };
  config = mkIf cfg.enable {
    home.packages = [cfg.package];

    xdg.configFile."vifm/vifmrc".text = concatStringsSep "\n" [
      ''
        " Generated by Home Manager.
        " Refer to https://wiki.vifm.info/index.php/Configuration_model
      ''
      (optionalString cfg.vifmimg.enable ''
        fileviewer *.pdf
            \ ${vifmimg}/bin/vifmimg pdf %px %py %pw %ph %c >/dev/tty </dev/tty %N
            \ %pc
            \ ${vifmimg}/bin/vifmimg clear >/dev/tty </dev/tty %N
        fileviewer *.epub
            \ ${vifmimg}/bin/vifmimg epub %px %py %pw %ph %c >/dev/tty </dev/tty %N
            \ %pc
            \ ${vifmimg}/bin/vifmimg clear >/dev/tty </dev/tty %N
        fileviewer *.otf,*.ttf,*.woff
            \ ${vifmimg}/bin/vifmimg font %px %py %pw %ph %c >/dev/tty </dev/tty %N
            \ %pc
            \ ${vifmimg}/bin/vifmimg clear >/dev/tty </dev/tty %N
        fileviewer <audio/*>
            \ ${vifmimg}/bin/vifmimg audio %px %py %pw %ph %c >/dev/tty </dev/tty %N
            \ %pc
            \ ${vifmimg}/bin/vifmimg clear >/dev/tty </dev/tty %N
        fileviewer <video/*>
            \ ${vifmimg}/bin/vifmimg video %px %py %pw %ph %c >/dev/tty </dev/tty %N
            \ %pc
            \ ${vifmimg}/bin/vifmimg clear >/dev/tty </dev/tty %N
        fileviewer <image/*>
            \ ${vifmimg}/bin/vifmimg draw %px %py %pw %ph %c >/dev/tty </dev/tty %N
            \ %pc
            \ ${vifmimg}/bin/vifmimg clear >/dev/tty </dev/tty %N
      '')
      (concatStringsSep "\n" (attrValues (mapAttrs (n: v: concatStringsSep "\n" (map (i: "${n} ${i}") v)) cfg.config)))
      cfg.extraConfig
    ];
  };
}
